"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[357],{74287:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var r=t(1123),s=t(74848),i=t(28453);const a={Title:"HOWTO configure network on ubuntu server",Tags:["ubuntu","network"]},o=void 0,l={authorsImageUrls:[]},c=[{value:"Set netplan configuration",id:"set-netplan-configuration",level:2},{value:"Set Dynamic IP address",id:"set-dynamic-ip-address",level:3},{value:"Set Static IP address",id:"set-static-ip-address",level:3},{value:"Apply configurations",id:"apply-configurations",level:3},{value:"Check IP status",id:"check-ip-status",level:3},{value:"Set network config on boot",id:"set-network-config-on-boot",level:2},{value:"Reference",id:"reference",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"set-netplan-configuration",children:"Set netplan configuration"}),"\n",(0,s.jsx)(n.h3,{id:"set-dynamic-ip-address",children:"Set Dynamic IP address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"for inter in $(ls /sys/class/net); do\nif [[ $inter != 'lo' ]]; then\ncat << EOF > /etc/netplan/99-$inter.yaml\nnetwork:\n  ethernets:\n    $inter:\n      dhcp4: true\n  version: 2\n  renderer: networkd\nEOF\nip link set dev $inter up\nfi\ndone\n"})}),"\n",(0,s.jsx)(n.h3,{id:"set-static-ip-address",children:"Set Static IP address"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:"network:\n  version: 2\n  renderer: networkd\n  ethernets:\n    eth0:                      # Replace with your interface name\n      dhcp4: false             # Disable DHCP for IPv4\n      addresses:\n        - 192.168.1.100/24     # Static IP address with subnet mask\n      routes:\n        - to: 0.0.0.0/0        # Default route (default gateway)\n          via: 192.168.1.1     # Replace with your gateway IP\n      nameservers:\n        addresses:\n          - 8.8.8.8            # Primary DNS server (Google DNS)\n          - 8.8.4.4            # Secondary DNS server\n"})}),"\n",(0,s.jsx)(n.h3,{id:"apply-configurations",children:"Apply configurations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"netplan apply\n"})}),"\n",(0,s.jsx)(n.h3,{id:"check-ip-status",children:"Check IP status"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ip a\n"})}),"\n",(0,s.jsx)(n.h2,{id:"set-network-config-on-boot",children:"Set network config on boot"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["combine script as a shell ",(0,s.jsx)(n.code,{children:"/etc/netplan/gen_netplan_config.sh"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"#!/bin/env bash\n\numask 377\n\nfor inter in $(ls /sys/class/net); do\nif [[ $inter != 'lo' ]] && [[ ! -e /etc/netplan/99-$inter.yaml ]]; then\ncat << EOF > /etc/netplan/99-$inter.yaml\nnetwork:\n  ethernets:\n    $inter:\n      dhcp4: true\n  version: 2\n  renderer: networkd\nEOF\nip link set dev $inter up\nfi\ndone\nnetplan apply\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["write ",(0,s.jsx)(n.code,{children:"/usr/lib/systemd/system/wait-netplan-dhcp.service"}),"[^3]"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:"[Unit]\nDescription=Generate DHCP networking DHCP demo for netplan\nBefore=network-online.target\n\n[Service]\nExecStart=/etc/netplan/gen_netplan_config.sh\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"start and enable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"systemctl start wait-netplan-dhcp\nsystemctl enable wait-netplan-dhcp\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.geeksforgeeks.org/how-to-list-network-interfaces-in-linux/",children:"How to List Network Interfaces in Linux"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://ubuntu.com/server/docs/configuring-networks",children:"Configuring networks | Ubuntu"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://unix.stackexchange.com/questions/236084/how-do-i-create-a-service-for-a-shell-script-so-i-can-start-and-stop-it-like-a-d",children:"Create a systemctl service"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}},1123:e=>{e.exports=JSON.parse('{"permalink":"/blog/2024/05/20/HOWTO-configure-network-on-ubuntu","source":"@site/blog/2024/05-20-HOWTO-configure-network-on-ubuntu.md","title":"HOWTO-configure-network-on-ubuntu","description":"Set netplan configuration","date":"2024-05-20T00:00:00.000Z","tags":[],"readingTime":1.23,"hasTruncateMarker":true,"authors":[],"frontMatter":{"Title":"HOWTO configure network on ubuntu server","Tags":["ubuntu","network"]},"unlisted":false,"prevItem":{"title":"auto-expand-partition","permalink":"/blog/2024/05/21/auto-expand-partition"},"nextItem":{"title":"Auth Login at Startup","permalink":"/blog/2024/05/20/auto-login"}}')}}]);