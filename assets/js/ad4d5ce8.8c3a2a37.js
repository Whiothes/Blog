"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7827],{30190:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var o=t(81461),r=t(74848),l=t(28453);const i={title:"ideas of memory pool",tags:["memory","pool"]},s=void 0,m={authorsImageUrls:[]},a=[{value:"the key information to implement a memory pool",id:"the-key-information-to-implement-a-memory-pool",level:2}];function c(e){const n={h2:"h2",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"the-key-information-to-implement-a-memory-pool",children:"the key information to implement a memory pool"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"boundary:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"How to solve the boundaries between different different chunks"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"name:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"How to get an allocated memory chunk"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"reference count"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"whether the chunk is still used. I want to free the memory only if the process termination or free, with threads free, only do reference count minus 1."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"data structure:"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"which data structure will be efficient?"})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(96540);const r={},l=o.createContext(r);function i(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(l.Provider,{value:n},e.children)}},81461:e=>{e.exports=JSON.parse('{"permalink":"/blog/2022/07/03/2022/mem-pool","source":"@site/blog/2022/2022-07-03-mem-pool.md","title":"ideas of memory pool","description":"the key information to implement a memory pool ##","date":"2022-07-03T00:00:00.000Z","tags":[{"inline":true,"label":"memory","permalink":"/blog/tags/memory"},{"inline":true,"label":"pool","permalink":"/blog/tags/pool"}],"readingTime":0.35,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"ideas of memory pool","tags":["memory","pool"]},"unlisted":false,"prevItem":{"title":"How to Clear Cache in Linux?","permalink":"/blog/2022/07/18/2022/clean-buff-cache"},"nextItem":{"title":"memory leak","permalink":"/blog/2022/06/30/2022/memory-leak"}}')}}]);