"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[820],{25697:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"TOC/computer/kernel/lkd/ch07","title":"\u7b2c 7 \u7ae0 \u4e2d\u65ad\u548c\u4e2d\u65ad\u5904\u7406","description":"7.1 \u4e2d\u65ad","source":"@site/docs/TOC/computer/kernel/lkd/ch07.md","sourceDirName":"TOC/computer/kernel/lkd","slug":"/TOC/computer/kernel/lkd/ch07","permalink":"/docs/TOC/computer/kernel/lkd/ch07","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u7b2c 6 \u7ae0 \u5185\u6838\u6570\u636e\u7ed3\u6784","permalink":"/docs/TOC/computer/kernel/lkd/ch06"},"next":{"title":"\u7b2c 8 \u7ae0 \u4e0b\u534a\u90e8\u548c\u63a8\u540e\u6267\u884c\u7684\u5de5\u4f5c","permalink":"/docs/TOC/computer/kernel/lkd/ch08"}}');var t=r(74848),s=r(28453);const d={},c="\u7b2c 7 \u7ae0 \u4e2d\u65ad\u548c\u4e2d\u65ad\u5904\u7406",l={},a=[{value:"7.1 \u4e2d\u65ad",id:"71-\u4e2d\u65ad",level:2},{value:"7.2 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",id:"72-\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",level:2},{value:"7.3 \u4e0a\u534a\u90e8\u4e0e\u4e0b\u534a\u90e8\u7684\u5bf9\u6bd4",id:"73-\u4e0a\u534a\u90e8\u4e0e\u4e0b\u534a\u90e8\u7684\u5bf9\u6bd4",level:2},{value:"7.4 \u6ce8\u518c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",id:"74-\u6ce8\u518c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",level:2},{value:"7.4.1 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6807\u5fd7",id:"741-\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6807\u5fd7",level:3},{value:"7.4.2 \u4e00\u4e2a\u4e2d\u65ad\u4f8b\u5b50",id:"742-\u4e00\u4e2a\u4e2d\u65ad\u4f8b\u5b50",level:3},{value:"7.4.3 \u91ca\u653e\u4e2d\u65ad\u7a0b\u5e8f",id:"743-\u91ca\u653e\u4e2d\u65ad\u7a0b\u5e8f",level:3},{value:"7.5 \u7f16\u5199\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",id:"75-\u7f16\u5199\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",level:2},{value:"7.5.1 \u5171\u4eab\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",id:"751-\u5171\u4eab\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",level:3},{value:"7.5.2 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5b9e\u4f8b",id:"752-\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5b9e\u4f8b",level:3},{value:"7.6 \u4e2d\u65ad\u4e0a\u4e0b\u6587",id:"76-\u4e2d\u65ad\u4e0a\u4e0b\u6587",level:2},{value:"7.7 \u4e2d\u65ad\u5904\u7406\u673a\u5236\u7684\u5b9e\u73b0",id:"77-\u4e2d\u65ad\u5904\u7406\u673a\u5236\u7684\u5b9e\u73b0",level:2},{value:"7.8 <code>/proc/interrupts</code>",id:"78-procinterrupts",level:2},{value:"7.9 \u4e2d\u65ad\u63a7\u5236",id:"79-\u4e2d\u65ad\u63a7\u5236",level:2},{value:"7.9.1 \u7981\u6b62\u548c\u6fc0\u6d3b\u4e2d\u65ad",id:"791-\u7981\u6b62\u548c\u6fc0\u6d3b\u4e2d\u65ad",level:3},{value:"7.9.2 \u7981\u6b62\u6307\u5b9a\u4e2d\u65ad\u7ebf",id:"792-\u7981\u6b62\u6307\u5b9a\u4e2d\u65ad\u7ebf",level:3},{value:"7.9.3 \u4e2d\u65ad\u7cfb\u7edf\u7684\u72b6\u6001",id:"793-\u4e2d\u65ad\u7cfb\u7edf\u7684\u72b6\u6001",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u7b2c-7-\u7ae0-\u4e2d\u65ad\u548c\u4e2d\u65ad\u5904\u7406",children:"\u7b2c 7 \u7ae0 \u4e2d\u65ad\u548c\u4e2d\u65ad\u5904\u7406"})}),"\n",(0,t.jsx)(n.h2,{id:"71-\u4e2d\u65ad",children:"7.1 \u4e2d\u65ad"}),"\n",(0,t.jsx)(n.p,{children:"\u4e2d\u65ad\u4f7f\u5f97\u786c\u4ef6\u53d1\u51fa\u901a\u77e5\u7ed9\u5904\u7406\u5668\u3002"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u5f02\u5e38"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u200b \u5f02\u5e38\u5728\u4ea7\u751f\u65f6\u5fc5\u987b\u8003\u8651\u4e0e\u5904\u7406\u5668\u65f6\u949f\u540c\u6b65\u3002\u4e5f\u88ab\u79f0\u4e3a\u540c\u6b65\u4e2d\u65ad\u3002"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"References"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.kernel.org/doc/html/latest/filesystems/proc.html#kernel-data",children:"The /proc Filesystem \u2014 The Linux Kernel documentation"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://linux-kernel-labs.github.io/refs/heads/master/lectures/interrupts.html",children:"Interrupts \u2014 The Linux Kernel documentation (linux-kernel-labs.github.io)"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"72-\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",children:"7.2 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f"}),"\n",(0,t.jsx)(n.p,{children:"\u54cd\u5e94\u4e2d\u65ad\u65f6\u5185\u6838\u6267\u884c\u7684\u51fd\u6570\uff0c\u79f0\u4e3a(interrupt handler \u6216 interrupt service routine, ISR)\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"73-\u4e0a\u534a\u90e8\u4e0e\u4e0b\u534a\u90e8\u7684\u5bf9\u6bd4",children:"7.3 \u4e0a\u534a\u90e8\u4e0e\u4e0b\u534a\u90e8\u7684\u5bf9\u6bd4"}),"\n",(0,t.jsx)(n.p,{children:"\u4e0a\u534a\u90e8 (top half)\uff0c \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f \uff1a \u63a5\u6536\u5230\u4e00\u4e2a\u4e2d\u65ad\u5c31\u7acb\u5373\u6267\u884c\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u4e0b\u534a\u90e8 (bottom half)\uff0c\u80fd\u591f\u88ab\u5141\u8bb8\u7a0d\u540e\u5b8c\u6210\u7684\u5de5\u4f5c\u3002"}),"\n",(0,t.jsx)(n.h2,{id:"74-\u6ce8\u518c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",children:"7.4 \u6ce8\u518c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"<linux/interrupt.h>"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/**\n * struct irqaction - per interrupt action descriptor\n * @handler: interrupt handler function\n * @flags: flags (see IRQF_* above)\n * @name: name of the device\n * @dev_id: cookie to identify the device\n * @next: pointer to the next irqaction for shared interrupts\n * @irq: interrupt number\n * @dir: pointer to the proc/irq/NN/name entry\n * @thread_fn: interupt handler function for threaded interrupts\n * @thread: thread pointer for threaded interrupts\n * @thread_flags: flags related to @thread\n */\nstruct irqaction {\n irq_handler_t handler;\n unsigned long flags;\n const char *name;\n void *dev_id;\n struct irqaction *next;\n int irq;\n struct proc_dir_entry *dir;\n irq_handler_t thread_fn;\n struct task_struct *thread;\n unsigned long thread_flags;\n};\n\nextern irqreturn_t no_action(int cpl, void *dev_id);\n/**\n * request_threaded_irq - allocate an interrupt line\n * @irq: Interrupt line to allocate\n * @handler: Function to be called when the IRQ occurs.\n *    Primary handler for threaded interrupts\n *    If NULL and thread_fn != NULL the default\n *    primary handler is installed\n * @thread_fn: Function called from the irq handler thread\n *      If NULL, no irq thread is created\n * @irqflags: Interrupt type flags\n * @devname: An ascii name for the claiming device\n * @dev_id: A cookie passed back to the handler function\n *\n * This call allocates interrupt resources and enables the\n * interrupt line and IRQ handling. From the point this\n * call is made your handler function may be invoked. Since\n * your handler function must clear any interrupt the board\n * raises, you must take care both to initialise your hardware\n * and to set up the interrupt handler in the right order.\n *\n * If you want to set up a threaded irq handler for your device\n * then you need to supply @handler and @thread_fn. @handler ist\n * still called in hard interrupt context and has to check\n * whether the interrupt originates from the device. If yes it\n * needs to disable the interrupt on the device and return\n * IRQ_WAKE_THREAD which will wake up the handler thread and run\n * @thread_fn. This split handler design is necessary to support\n * shared interrupts.\n *\n * Dev_id must be globally unique. Normally the address of the\n * device data structure is used as the cookie. Since the handler\n * receives this value it makes sense to use it.\n *\n * If your interrupt is shared you must pass a non NULL dev_id\n * as this is required when freeing the interrupt.\n *\n * Flags:\n *\n * IRQF_SHARED         Interrupt is shared\n * IRQF_DISABLED       Disable local interrupts while processing\n * IRQF_SAMPLE_RANDOM The interrupt can be used for entropy\n * IRQF_TRIGGER_*      Specify active edge(s) or level\n *\n */\nint request_threaded_irq(unsigned int irq, irq_handler_t handler,\n    irq_handler_t thread_fn, unsigned long irqflags,\n    const char *devname, void *dev_id);\n\nstatic inline int __must_check\nrequest_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,\n     const char *name, void *dev)\n{\n return request_threaded_irq(irq, handler, NULL, flags, name, dev);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"741-\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6807\u5fd7",children:"7.4.1 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6807\u5fd7"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"flags"})," \u53ef\u4ee5\u662f 0 \u6216\u4ee5\u4e0b\u4e4b\u4e00:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IRQF_DISABLED"}),"\uff0c\u5185\u6838\u5728\u5904\u7406\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u7981\u6b62\u5176\u4ed6\u6240\u6709\u4e2d\u65ad"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IRQF_SAMPLE_RANDOM"}),"\uff0c\u5982\u679c\u8bbe\u5907\u4ee5\u9884\u77e5\u7684\u901f\u7387\u4ea7\u751f\u4e2d\u65ad\uff0c\u6216\u53ef\u80fd\u53d7\u5916\u90e8\u653b\u51fb\u8005\u5f71\u54cd\uff0c\u4e0d\u8981\u8bbe\u7f6e\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IRQF_TIMER"}),"\uff0c\u4e3a\u7cfb\u7edf\u5b9a\u65f6\u5668\u4e2d\u65ad\u5904\u7406\u51c6\u5907\u7684"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"IRQF_SHARED"}),"\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e4b\u95f4\u5171\u4eab\u4e2d\u65ad\u7ebf\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"}),"\u662f\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u8bbe\u5907\u7684ASCII\u6587\u672c\u8868\u793a\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"dev"}),"\u7528\u4e8e\u5171\u4eab\u4e2d\u65ad\u7ebf\u3002\u5f53\u4e2d\u65ad\u7a0b\u5e8f\u9700\u8981\u91ca\u653e\u65f6\uff0c",(0,t.jsx)(n.code,{children:"dev"}),"\u5c06\u63d0\u4f9b\u552f\u4e00",(0,t.jsx)(n.code,{children:"cookie"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u6210\u529f\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"0"})]}),"\n",(0,t.jsx)(n.h3,{id:"742-\u4e00\u4e2a\u4e2d\u65ad\u4f8b\u5b50",children:"7.4.2 \u4e00\u4e2a\u4e2d\u65ad\u4f8b\u5b50"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'request_irq();\n\nif (request_irq(irqn, my_interrupt, IRQF_SHARED, "my_device", my_dev)) {\n        printk(KERN_ERR, "my_device: cannot register IRQ %d\\n", irqn);\n        return -EIO;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"743-\u91ca\u653e\u4e2d\u65ad\u7a0b\u5e8f",children:"7.4.3 \u91ca\u653e\u4e2d\u65ad\u7a0b\u5e8f"}),"\n",(0,t.jsx)(n.p,{children:"\u5378\u8f7d\u9a71\u52a8\u65f6\u9700\u8981\u6ce8\u9500\u76f8\u5e94\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u91ca\u653e\u4e2d\u65ad\u7ebf\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/**\n * free_irq - free an interrupt allocated with request_irq\n * @irq: Interrupt line to free\n * @dev_id: Device identity to free\n *\n * Remove an interrupt handler. The handler is removed and if the\n * interrupt line is no longer in use by any driver it is disabled.\n * On a shared IRQ the caller must ensure the interrupt is disabled\n * on the card it drives before calling this function. The function\n * does not return until any executing interrupts for this IRQ\n * have completed.\n *\n * This function must not be called from interrupt context.\n */\nvoid free_irq(unsigned int irq, void *dev_id)\n{\n struct irq_desc *desc = irq_to_desc(irq);\n\n if (!desc)\n  return;\n\n chip_bus_lock(irq, desc);\n kfree(__free_irq(irq, dev_id));\n chip_bus_sync_unlock(irq, desc);\n}\nEXPORT_SYMBOL(free_irq);\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u6307\u5b9a\u7684\u4e2d\u65ad\u7ebf\u4e0d\u662f\u5171\u4eab\u7684\uff0c\u5219\u51fd\u6570\u5220\u9664\u5904\u7406\u7a0b\u5e8f\u65f6\u7981\u7528\u8fd9\u6761\u4e2d\u65ad\u7ebf\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u5982\u679c\u4e2d\u65ad\u7ebf\u662f\u5171\u4eab\u7684\uff0c\u5219\u4ec5\u5220\u9664",(0,t.jsx)(n.code,{children:"dev"}),"\u6240\u5bf9\u5e94\u7684\u5904\u7406\u7a0b\u5e8f\uff0c\u53ea\u6709\u5728\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5904\u7406\u7a0b\u5e8f\u65f6\u624d\u4f1a\u88ab\u7981\u7528\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"75-\u7f16\u5199\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",children:"7.5 \u7f16\u5199\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/**\n * return IRQ_NONE or IRQ_HANDLED\n */\nstatic irqreturn_t intr_handler(int irq, void *dev);\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u91cd\u5165\u548c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f"})}),"\n",(0,t.jsx)(n.p,{children:"\u200b \u65e0\u987b\u91cd\u5165\u3002\u540c\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7edd\u5bf9\u4e0d\u4f1a\u88ab\u540c\u65f6\u8c03\u7528\u4ee5\u5904\u7406\u5d4c\u5957\u7684\u4e2d\u65ad\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"751-\u5171\u4eab\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f",children:"7.5.1 \u5171\u4eab\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"request_irq()"}),"\u7684\u53c2\u6570",(0,t.jsx)(n.code,{children:"flags"}),"\u5fc5\u987b\u8bbe\u7f6e",(0,t.jsx)(n.code,{children:"IRQ_SHARED"}),"\u6807\u5fd7"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"dev"}),"\u53c2\u6570\u5fc5\u987b\u552f\u4e00\u3002"]}),"\n",(0,t.jsx)(n.li,{children:"\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5fc5\u987b\u80fd\u591f\u533a\u5206\u5b83\u7684\u8bbe\u5907\u662f\u5426\u4ea7\u751f\u4e86\u4e2d\u65ad\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["\u6307\u5b9a",(0,t.jsx)(n.code,{children:"IRQF_SHARED"}),"\u6807\u5fd7\u8c03\u7528\u65f6\uff0c\u53ea\u6709\u5728\u4ee5\u4e0b\u60c5\u51b5\u624d\u53ef\u80fd\u6210\u529f\uff1a"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u4e2d\u65ad\u7ebf\u5f53\u524d\u672a\u88ab\u6ce8\u518c"}),"\n",(0,t.jsxs)(n.li,{children:["\u8be5\u7ebf\u4e0a\u7684\u6240\u6709\u5df2\u6ce8\u518c\u5904\u7406\u7a0b\u5e8f\u90fd\u6307\u5b9a\u4e86",(0,t.jsx)(n.code,{children:"IRQF_SHARED"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"752-\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5b9e\u4f8b",children:"7.5.2 \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5b9e\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"drivers/char/rtc.c"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'#ifdef RTC_IRQ\n/*\n * A very tiny interrupt handler. It runs with IRQF_DISABLED set,\n * but there is possibility of conflicting with the set_rtc_mmss()\n * call (the rtc irq and the timer irq can easily run at the same\n * time in two different CPUs). So we need to serialize\n * accesses to the chip with the rtc_lock spinlock that each\n * architecture should implement in the timer code.\n * (See ./arch/XXXX/kernel/time.c for the set_rtc_mmss() function.)\n */\n\nstatic irqreturn_t rtc_interrupt(int irq, void *dev_id)\n{\n /*\n  * Can be an alarm interrupt, update complete interrupt,\n  * or a periodic interrupt. We store the status in the\n  * low byte and the number of interrupts received since\n  * the last read in the remainder of rtc_irq_data.\n  */\n\n spin_lock(&rtc_lock);\n rtc_irq_data += 0x100;\n rtc_irq_data &= ~0xff;\n if (is_hpet_enabled()) {\n  /*\n   * In this case it is HPET RTC interrupt handler\n   * calling us, with the interrupt information\n   * passed as arg1, instead of irq.\n   */\n  rtc_irq_data |= (unsigned long)irq & 0xF0;\n } else {\n  rtc_irq_data |= (CMOS_READ(RTC_INTR_FLAGS) & 0xF0);\n }\n\n if (rtc_status & RTC_TIMER_ON)\n  mod_timer(&rtc_irq_timer,\n     jiffies + HZ / rtc_freq + 2 * HZ / 100);\n\n spin_unlock(&rtc_lock);\n\n /* Now do the rest of the actions */\n spin_lock(&rtc_task_lock);\n if (rtc_callback)\n  rtc_callback->func(rtc_callback->private_data);\n spin_unlock(&rtc_task_lock);\n wake_up_interruptible(&rtc_wait);\n\n kill_fasync(&rtc_async_queue, SIGIO, POLL_IN);\n\n return IRQ_HANDLED;\n}\n#endif\n\nstatic int __init rtc_init(void)\n{\n /* ...  */\n if (request_irq(\n  RTC_IRQ, rtc_int_handler_ptr, IRQF_DISABLED, "rtc", NULL)) {\n  /* Yeah right, seeing as irq 8 doesn\'t even hit the bus. */\n  rtc_has_irq = 0;\n  printk(KERN_ERR "rtc: IRQ %d is not free.\\n", RTC_IRQ);\n  rtc_release_region();\n\n  return -EIO;\n }\n hpet_rtc_timer_init();\n\n /* ... */\n printk(KERN_INFO "Real Time Clock Driver v" RTC_VERSION "\\n");\n\n return 0;\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"76-\u4e2d\u65ad\u4e0a\u4e0b\u6587",children:"7.6 \u4e2d\u65ad\u4e0a\u4e0b\u6587"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e0d\u53ef\u4ee5\u7761\u7720 \uff0c\u4e0d\u80fd\u4ece\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u67d0\u4e9b\u51fd\u6570\u3002"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u4e2d\u65ad\u4e0a\u4e0b\u6587\u5177\u6709\u8f83\u4e3a\u4e25\u683c\u7684\u65f6\u95f4\u9650\u5236\uff0c\u56e0\u4e3a\u5b83\u6253\u65ad\u4e86\u5176\u5b83\u4ee3\u7801\u3002"})}),"\n",(0,t.jsx)(n.h2,{id:"77-\u4e2d\u65ad\u5904\u7406\u673a\u5236\u7684\u5b9e\u73b0",children:"7.7 \u4e2d\u65ad\u5904\u7406\u673a\u5236\u7684\u5b9e\u73b0"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"./imgs/fig7.1.png",src:r(32613).A+"",width:"950",height:"603"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5165\u53e3\u51fd\u6570\uff1a",(0,t.jsx)(n.code,{children:"do_IRQ()"}),"\uff0c\u4f4d\u4e8e ",(0,t.jsx)(n.code,{children:"arch/*/kernel/irq.c"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'/*\n * do_IRQ handles all normal device IRQ\'s (the special\n * SMP cross-CPU interrupts have their own specific\n * handlers).\n */\nunsigned int __irq_entry do_IRQ(struct pt_regs *regs)\n{\n struct pt_regs *old_regs = set_irq_regs(regs);\n\n /* high bit used in ret_from_ code  */\n unsigned vector = ~regs->orig_ax;\n unsigned irq;\n\n exit_idle();\n irq_enter();\n\n irq = __get_cpu_var(vector_irq)[vector];\n\n if (!handle_irq(irq, regs)) {\n  ack_APIC_irq();\n\n  if (printk_ratelimit())\n   pr_emerg("%s: %d.%d No irq handler for vector (irq %d)\\n",\n    __func__, smp_processor_id(), vector, irq);\n }\n\n irq_exit();\n\n set_irq_regs(old_regs);\n return 1;\n}\n\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u8fd0\u884c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff1a",(0,t.jsx)(n.code,{children:"kernel/irq/handle.c"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/**\n * handle_IRQ_event - irq action chain handler\n * @irq: the interrupt number\n * @action: the interrupt action chain for this irq\n *\n * Handles the action chain of an irq event\n */\nirqreturn_t handle_IRQ_event(unsigned int irq, struct irqaction *action);\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"78-procinterrupts",children:["7.8 ",(0,t.jsx)(n.code,{children:"/proc/interrupts"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"procfs"}),"\u662f\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ea\u5b58\u5728\u4e8e\u5185\u6838\uff0c\u4e00\u822c\u5b89\u88c5\u4e8e",(0,t.jsx)(n.code,{children:"/proc"}),"\u76ee\u5f55\u3002\u5728",(0,t.jsx)(n.code,{children:"procfs"}),"\u4e2d\u8bfb\u5199\u6587\u4ef6\u90fd\u8981\u8c03\u7528\u5185\u6838\u51fd\u6570"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"/proc/interrupts"}),"\u6587\u4ef6\u4e2d\u5b58\u653e\u7684\u662f\u7cfb\u7edf\u4e2d\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u7edf\u8ba1\u4fe1\u606f\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"arch/*/kernel/irq.c- show_interrupts()"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\u279c   cat /proc/interrupts\n            CPU0       CPU1\n   0:          5          0   IO-APIC    2-edge      timer\n   1:          0      89529   IO-APIC    1-edge      i8042\n   6:          0          2   IO-APIC    6-edge      floppy\n   8:          1          0   IO-APIC    8-edge      rtc0\n   9:          0          0   IO-APIC    9-fasteoi   acpi\n  12:     136461          0   IO-APIC   12-edge      i8042\n  14:          0          0   IO-APIC   14-edge      ata_piix\n  15:          0          0   IO-APIC   15-edge      ata_piix\n  16:          0     286322   IO-APIC   16-fasteoi   vmwgfx\n  17:      15846     354048   IO-APIC   17-fasteoi   ehci_hcd:usb1, ioc0\n  18:          0        157   IO-APIC   18-fasteoi   uhci_hcd:usb2\n  19:         83     160633   IO-APIC   19-fasteoi   ens33\n  24:          0          0   PCI-MSI 344064-edge      PCIe PME, pciehp\n  25:          0          0   PCI-MSI 346112-edge      PCIe PME, pciehp\n  26:          0          0   PCI-MSI 348160-edge      PCIe PME, pciehp\n  27:          0          0   PCI-MSI 350208-edge      PCIe PME, pciehp\n  28:          0          0   PCI-MSI 352256-edge      PCIe PME, pciehp\n  29:          0          0   PCI-MSI 354304-edge      PCIe PME, pciehp\n  30:          0          0   PCI-MSI 356352-edge      PCIe PME, pciehp\n  31:          0          0   PCI-MSI 358400-edge      PCIe PME, pciehp\n  32:          0          0   PCI-MSI 360448-edge      PCIe PME, pciehp\n  33:          0          0   PCI-MSI 362496-edge      PCIe PME, pciehp\n  34:          0          0   PCI-MSI 364544-edge      PCIe PME, pciehp\n  35:          0          0   PCI-MSI 366592-edge      PCIe PME, pciehp\n  36:          0          0   PCI-MSI 368640-edge      PCIe PME, pciehp\n  37:          0          0   PCI-MSI 370688-edge      PCIe PME, pciehp\n  38:          0          0   PCI-MSI 372736-edge      PCIe PME, pciehp\n  39:          0          0   PCI-MSI 374784-edge      PCIe PME, pciehp\n  40:          0          0   PCI-MSI 376832-edge      PCIe PME, pciehp\n  41:          0          0   PCI-MSI 378880-edge      PCIe PME, pciehp\n  42:          0          0   PCI-MSI 380928-edge      PCIe PME, pciehp\n  43:          0          0   PCI-MSI 382976-edge      PCIe PME, pciehp\n  44:          0          0   PCI-MSI 385024-edge      PCIe PME, pciehp\n  45:          0          0   PCI-MSI 387072-edge      PCIe PME, pciehp\n  46:          0          0   PCI-MSI 389120-edge      PCIe PME, pciehp\n  47:          0          0   PCI-MSI 391168-edge      PCIe PME, pciehp\n  48:          0          0   PCI-MSI 393216-edge      PCIe PME, pciehp\n  49:          0          0   PCI-MSI 395264-edge      PCIe PME, pciehp\n  50:          0          0   PCI-MSI 397312-edge      PCIe PME, pciehp\n  51:          0          0   PCI-MSI 399360-edge      PCIe PME, pciehp\n  52:          0          0   PCI-MSI 401408-edge      PCIe PME, pciehp\n  53:          0          0   PCI-MSI 403456-edge      PCIe PME, pciehp\n  54:          0          0   PCI-MSI 405504-edge      PCIe PME, pciehp\n  55:          0          0   PCI-MSI 407552-edge      PCIe PME, pciehp\n  56:      83870          0   PCI-MSI 1114112-edge      ahci[0000:02:04.0]\n  57:         41      14303   PCI-MSI 129024-edge      vmw_vmci\n  58:          0          0   PCI-MSI 129025-edge      vmw_vmci\n NMI:        461        454   Non-maskable interrupts\n LOC:   10497563   10468836   Local timer interrupts\n SPU:          0          0   Spurious interrupts\n PMI:        461        454   Performance monitoring interrupts\n IWI:          4          1   IRQ work interrupts\n RTR:          0          0   APIC ICR read retries\n RES:     186148     187591   Rescheduling interrupts\n CAL:    6107406    5820828   Function call interrupts\n TLB:     198921     192237   TLB shootdowns\n TRM:          0          0   Thermal event interrupts\n THR:          0          0   Threshold APIC interrupts\n DFR:          0          0   Deferred Error APIC interrupts\n MCE:          0          0   Machine check exceptions\n MCP:        317        317   Machine check polls\n ERR:          0\n MIS:          0\n PIN:          0          0   Posted-interrupt notification event\n NPI:          0          0   Nested posted-interrupt event\n PIW:          0          0   Posted-interrupt wakeup event\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7b2c1\u5217\u662f\u4e2d\u65ad\u7ebf"}),"\n",(0,t.jsx)(n.p,{children:"\u7b2c2-3\u5217\u662f\u63a5\u6536\u4e2d\u65ad\u6570\u76ee\u7684\u8ba1\u6570\u5668"}),"\n",(0,t.jsx)(n.p,{children:"\u7b2c4\u5217\u662f\u5904\u7406\u8fd9\u4e2a\u4e2d\u65ad\u7684\u4e2d\u65ad\u63a7\u5236\u5668"}),"\n",(0,t.jsx)(n.h2,{id:"79-\u4e2d\u65ad\u63a7\u5236",children:"7.9 \u4e2d\u65ad\u63a7\u5236"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"<asm/system.h>"}),"\u3001",(0,t.jsx)(n.code,{children:"<asm/irq.h>"})]}),"\n",(0,t.jsx)(n.h3,{id:"791-\u7981\u6b62\u548c\u6fc0\u6d3b\u4e2d\u65ad",children:"7.9.1 \u7981\u6b62\u548c\u6fc0\u6d3b\u4e2d\u65ad"}),"\n",(0,t.jsxs)(n.p,{children:["\u7981\u6b62\u548c\u542f\u7528",(0,t.jsx)(n.strong,{children:"\u5f53\u524d\u5904\u7406\u5668"}),"\u4e2d\u65ad"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"#define local_irq_enable() \\\n do { trace_hardirqs_on(); raw_local_irq_enable(); } while (0)\n#define local_irq_disable() \\\n do { raw_local_irq_disable(); trace_hardirqs_off(); } while (0)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"792-\u7981\u6b62\u6307\u5b9a\u4e2d\u65ad\u7ebf",children:"7.9.2 \u7981\u6b62\u6307\u5b9a\u4e2d\u65ad\u7ebf"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kernel/irq/manage.c"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/**\n * disable_irq_nosync - disable an irq without waiting\n * @irq: Interrupt to disable\n *\n * Disable the selected interrupt line.  Disables and Enables are\n * nested.\n * Unlike disable_irq(), this function does not ensure existing\n * instances of the IRQ handler have completed before returning.\n *\n * This function may be called from IRQ context.\n */\nvoid disable_irq_nosync(unsigned int irq);\n\n/**\n * disable_irq - disable an irq and wait for completion\n * @irq: Interrupt to disable\n *\n * Disable the selected interrupt line.  Enables and Disables are\n * nested.\n * This function waits for any pending IRQ handlers for this interrupt\n * to complete before returning. If you use this function while\n * holding a resource the IRQ handler may need you will deadlock.\n *\n * This function may be called - with care - from IRQ context.\n */\nvoid disable_irq(unsigned int irq);\n\n/**\n * enable_irq - enable handling of an irq\n * @irq: Interrupt to enable\n *\n * Undoes the effect of one call to disable_irq().  If this\n * matches the last disable, processing of interrupts on this\n * IRQ line is re-enabled.\n *\n * This function may be called from IRQ context only when\n * desc->chip->bus_lock and desc->chip->bus_sync_unlock are NULL !\n */\nvoid enable_irq(unsigned int irq);\n\n/**\n * synchronize_irq - wait for pending IRQ handlers (on other CPUs)\n * @irq: interrupt number to wait for\n *\n * This function waits for any pending IRQ handlers for this interrupt\n * to complete before returning. If you use this function while\n * holding a resource the IRQ handler may need you will deadlock.\n *\n * This function may be called - with care - from IRQ context.\n */\nvoid synchronize_irq(unsigned int irq);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"793-\u4e2d\u65ad\u7cfb\u7edf\u7684\u72b6\u6001",children:"7.9.3 \u4e2d\u65ad\u7cfb\u7edf\u7684\u72b6\u6001"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"<linux/irqflags.h>"})}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"#define irqs_disabled()      \\\n({        \\\n unsigned long _flags;     \\\n        \\\n raw_local_save_flags(_flags);    \\\n raw_irqs_disabled_flags(_flags);   \\\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u7528\u6765\u68c0\u67e5\u5185\u6838\u7684\u5f53\u524d\u4e0a\u4e0b\u6587\u7684\u63a5\u53e3"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"\n/*\n * Are we doing bottom half or hardware interrupt processing?\n * Are we in a softirq context? Interrupt context?\n */\n#define in_irq()  (hardirq_count())\n#define in_softirq()  (softirq_count())\n#define in_interrupt()  (irq_count())\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u8868 7-2 \u4e2d\u65ad\u63a7\u5236\u65b9\u6cd5\u7684\u5217\u8868"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u51fd\u6570"}),(0,t.jsx)(n.th,{children:"\u8bf4\u660e"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"local_irq_disable()"})}),(0,t.jsx)(n.td,{children:"\u7981\u6b62\u672c\u5730\u4e2d\u65ad\u4f20\u9012"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"local_irq_enable()"})}),(0,t.jsx)(n.td,{children:"\u6fc0\u6d3b\u672c\u5730\u4e2d\u65ad\u4f20\u9012"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"local_irq_save()"})}),(0,t.jsx)(n.td,{children:"\u4fdd\u5b58\u672c\u5730\u4e2d\u65ad\u4f20\u9012\u7684\u72b6\u6001\uff0c\u7136\u540e\u7981\u6b62\u672c\u5730\u4e2d\u65ad\u4f20\u9012"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"local_irq_restore()"})}),(0,t.jsx)(n.td,{children:"\u6062\u590d\u672c\u5730\u4e2d\u65ad\u4f20\u9012\u5230\u7ed9\u5b9a\u7684\u72b6\u6001"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disable_irq()"})}),(0,t.jsx)(n.td,{children:"\u7981\u6b62\u7ed9\u5b9a\u4e2d\u65ad\u7ebf\uff0c\u5e76\u786e\u4fdd\u8be5\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u5728\u8be5\u4e2d\u65ad\u7ebf\u4e0a\u6ca1\u6709\u5904\u7406\u7a0b\u5728\u8fd0\u884c"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disable_irq_nosync()"})}),(0,t.jsx)(n.td,{children:"\u7981\u6b62\u7ed9\u5b9a\u4e2d\u65ad\u7ebf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"enable_irq()"})}),(0,t.jsx)(n.td,{children:"\u6fc0\u6d3b\u7ed9\u5b9a\u4e2d\u65ad\u7ebf"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"irqs_disabled()"})}),(0,t.jsx)(n.td,{children:"\u5982\u679c\u672c\u5730\u4e2d\u65ad\u88ab\u7981\u6b62\uff0c\u5219\u8fd4\u56de\u975e0\uff1b\u5426\u5219\u8fd4\u56de0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"in_interrupt()"})}),(0,t.jsx)(n.td,{children:"\u5982\u679c\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u8fd4\u56de\u975e0\uff1b\u5982\u679c\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u8fd4\u56de0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"in_irq()"})}),(0,t.jsx)(n.td,{children:"\u5982\u679c\u5f53\u524d\u6b63\u5728\u6267\u884c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5219\u8fd4\u56de\u975e0\uff1b\u5426\u5219\u8fd4\u56de0"})]})]})]}),"\n","\n",(0,t.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,t.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,t.jsxs)(n.p,{children:["\u4e66\u4e2d\u8ba4\u4e3a\u5b9a\u4e49\u5728 ",(0,t.jsx)(n.code,{children:"<asm/system.h>"}),"\uff0c\u4f462.6.34\u7248\u672c\u6e90\u7801\u76f8\u5173\u6587\u4ef6\u4e2d\u5e76\u672a\u627e\u5230 ",(0,t.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},32613:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/fig7.1-f8f5895f819fd74f0a18dd71d8ac0d75.png"},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var i=r(96540);const t={},s=i.createContext(t);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);