"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8102],{56065:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"TOC/computer/kernel/lkd/ch03","title":"\u7b2c 3 \u7ae0 \u8fdb\u7a0b\u7ba1\u7406","description":"3.1 \u8fdb\u7a0b\u63cf\u8ff0\u7b26\u53ca\u4efb\u52a1\u7ed3\u6784 ##","source":"@site/docs/TOC/computer/kernel/lkd/ch03.md","sourceDirName":"TOC/computer/kernel/lkd","slug":"/TOC/computer/kernel/lkd/ch03","permalink":"/docs/TOC/computer/kernel/lkd/ch03","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u7b2c 2 \u7ae0 \u4ece\u5185\u6838\u51fa\u53d1","permalink":"/docs/TOC/computer/kernel/lkd/ch02"},"next":{"title":"\u7b2c 4 \u7ae0 \u8fdb\u7a0b\u8c03\u5ea6","permalink":"/docs/TOC/computer/kernel/lkd/ch04"}}');var t=s(74848),i=s(28453);const c={},d="\u7b2c 3 \u7ae0 \u8fdb\u7a0b\u7ba1\u7406",l={},a=[{value:"3.1 \u8fdb\u7a0b\u63cf\u8ff0\u7b26\u53ca\u4efb\u52a1\u7ed3\u6784",id:"31-\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u53ca\u4efb\u52a1\u7ed3\u6784",level:2},{value:"3.2.1 \u5206\u914d\u8fdb\u7a0b\u63cf\u8ff0\u7b26",id:"321-\u5206\u914d\u8fdb\u7a0b\u63cf\u8ff0\u7b26",level:3},{value:"3.2.2 \u8fdb\u7a0b\u63cf\u8ff0\u7b26\u7684\u5b58\u653e",id:"322-\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u7684\u5b58\u653e",level:3},{value:"3.2.3 \u8fdb\u7a0b\u72b6\u6001",id:"323-\u8fdb\u7a0b\u72b6\u6001",level:3},{value:"3.2.4 \u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001",id:"324-\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001",level:3},{value:"3.2.5 \u8fdb\u7a0b\u4e0a\u4e0b\u6587",id:"325-\u8fdb\u7a0b\u4e0a\u4e0b\u6587",level:3},{value:"3.uu2.6 \u8fdb\u7a0b\u5bb6\u65cf\u6811",id:"3uu26-\u8fdb\u7a0b\u5bb6\u65cf\u6811",level:3},{value:"3.3 \u8fdb\u7a0b\u521b\u5efa",id:"33-\u8fdb\u7a0b\u521b\u5efa",level:2},{value:"3.3.1 \u5199\u65f6\u62f7\u8d1d",id:"331-\u5199\u65f6\u62f7\u8d1d",level:3},{value:"3.3.2 <code>fork()</code>",id:"332-fork",level:3},{value:"3.4 \u7ebf\u7a0b\u5728 Linux \u4e2d\u7684\u5b9e\u73b0",id:"34-\u7ebf\u7a0b\u5728-linux-\u4e2d\u7684\u5b9e\u73b0",level:2},{value:"3.4.1 \u521b\u5efa\u7ebf\u7a0b",id:"341-\u521b\u5efa\u7ebf\u7a0b",level:3},{value:"3.4.2 \u5185\u6838\u7ebf\u7a0b",id:"342-\u5185\u6838\u7ebf\u7a0b",level:3},{value:"3.5 \u8fdb\u7a0b\u7ec8\u7ed3",id:"35-\u8fdb\u7a0b\u7ec8\u7ed3",level:2},{value:"3.5.1 \u5220\u9664\u8fdb\u7a0b\u63cf\u8ff0\u7b26",id:"351-\u5220\u9664\u8fdb\u7a0b\u63cf\u8ff0\u7b26",level:3},{value:"3.5.2 \u5b64\u72ec\u8fdb\u7a0b\u9020\u6210\u7684\u8fdb\u9000\u7ef4\u8c37",id:"352-\u5b64\u72ec\u8fdb\u7a0b\u9020\u6210\u7684\u8fdb\u9000\u7ef4\u8c37",level:3},{value:"3.6 \u5c0f\u7ed3",id:"36-\u5c0f\u7ed3",level:2}];function h(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\u7b2c-3-\u7ae0-\u8fdb\u7a0b\u7ba1\u7406",children:"\u7b2c 3 \u7ae0 \u8fdb\u7a0b\u7ba1\u7406"})}),"\n",(0,t.jsx)(n.h2,{id:"31-\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u53ca\u4efb\u52a1\u7ed3\u6784",children:"3.1 \u8fdb\u7a0b\u63cf\u8ff0\u7b26\u53ca\u4efb\u52a1\u7ed3\u6784"}),"\n",(0,t.jsxs)("div",{style:{textAlign:"center"},children:[(0,t.jsx)("img",{src:s(11783).A,style:{zoom:"33%"}}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u56fe 3-1 \u8fdb\u7a0b\u63cf\u8ff0\u7b26\u53ca\u4efb\u52a1\u961f\u5217"})})]}),"\n",(0,t.jsx)(n.p,{children:"\u4efb\u52a1\u961f\u5217\uff1a\u8fdb\u7a0b\u7684\u5217\u8868\uff0c\u53cc\u5411\u5faa\u73af\u94fe\u8868\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u7684\u7ed3\u6784",(0,t.jsx)(n.code,{children:"task_struct"}),"\u5b9a\u4e49\u5728",(0,t.jsx)(n.code,{children:"<linux/sched.h>"}),"\u6587\u4ef6\u4e2d\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u5305\u542b\u7684\u6570\u636e\uff1a\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u6276\u8d77\u7684\u4fe1\u53f7\uff0c\u8fdb\u7a0b\u7684\u72b6\u6001\uff0c\u7b49\u7b49\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"321-\u5206\u914d\u8fdb\u7a0b\u63cf\u8ff0\u7b26",children:"3.2.1 \u5206\u914d\u8fdb\u7a0b\u63cf\u8ff0\u7b26"}),"\n",(0,t.jsxs)(n.p,{children:["\u901a\u8fc7 ",(0,t.jsx)(n.code,{children:"slab"}),"  \u5206\u914d\u5668\u5206\u914d ",(0,t.jsx)(n.code,{children:"task_struct"})," \u7ed3\u6784. \u73b0\u5728 ",(0,t.jsx)(n.code,{children:"slab"})," \u5206\u914d\u5668\u901a\u8fc7",(0,t.jsx)(n.code,{children:"struct thread_info"})," \u52a8\u6001\u751f\u6210 ",(0,t.jsx)(n.code,{children:"task_struct"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["x86 \u4e0a, \u5728\u6587\u4ef6 ",(0,t.jsx)(n.code,{children:"<asm/thread_info.h>"}),"\u4e2d:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"struct thread_info \n{\n        struct task_struct              *task;\n        struct exec_domain              *exec_domain;\n        _u32                            flags;\n        _u32                            status;\n        _u32                            cpu;\n        int                             preempt_count;\n        mm_segment_t                    addr_limit;\n        struct restart_block            restart_block;\n        void                            *sysenter_return;\n        int                             uaccess_str;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"322-\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u7684\u5b58\u653e",children:"3.2.2 \u8fdb\u7a0b\u63cf\u8ff0\u7b26\u7684\u5b58\u653e"}),"\n",(0,t.jsxs)(n.p,{children:["PID \u7684\u6700\u5927\u503c\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a32768\uff0c \u53ef\u4fee\u6539 ",(0,t.jsx)(n.code,{children:"/proc/sys/kernel/pid_max"})," \u6765\u4fee\u6539\u4e0a\u9650\u3002"]}),"\n",(0,t.jsx)(n.h3,{id:"323-\u8fdb\u7a0b\u72b6\u6001",children:"3.2.3 \u8fdb\u7a0b\u72b6\u6001"}),"\n",(0,t.jsxs)("div",{style:{textAlign:"center"},children:[(0,t.jsx)("img",{src:s(74086).A,style:{zoom:"33%"}}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u56fe 3-3 \u8fdb\u7a0b\u72b6\u6001\u8f6c\u5316"})})]}),"\n",(0,t.jsx)(n.h3,{id:"324-\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001",children:"3.2.4 \u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"set_task_state(task, state);\t/* \u5c06\u4efb\u52a1 task \u7684\u72b6\u6001\u8bbe\u7f6e\u4e3a state*/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"325-\u8fdb\u7a0b\u4e0a\u4e0b\u6587",children:"3.2.5 \u8fdb\u7a0b\u4e0a\u4e0b\u6587"}),"\n",(0,t.jsx)(n.p,{children:"\u7cfb\u7edf\u8c03\u7528\u548c\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u662f\u5bf9\u5185\u6838\u660e\u786e\u5b9a\u4e49\u7684\u63a5\u53e3\u3002\u5bf9\u5185\u6838\u7684\u6240\u6709\u8bbf\u95ee\u90fd\u5fc5\u987b\u901a\u8fc7\u63a5\u53e3\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"3uu26-\u8fdb\u7a0b\u5bb6\u65cf\u6811",children:"3.uu2.6 \u8fdb\u7a0b\u5bb6\u65cf\u6811"}),"\n",(0,t.jsxs)(n.p,{children:["\u8fdb\u7a0b\u4e4b\u95f4\u5b58\u5728\u660e\u663e\u7684\u7ee7\u627f\u5173\u7cfb\u3002\u6bcf\u4e2a ",(0,t.jsx)(n.code,{children:"task_struct"})," \u90fd\u5305\u542b\u4e00\u4e2a\u6307\u5411\u7236\u8fdb\u7a0b\u7684 ",(0,t.jsx)(n.code,{children:"task_struct *parent"}),"\uff0c\u548c\u4e00\u4e2a",(0,t.jsx)(n.code,{children:"children"}),"\u5b50\u8fdb\u7a0b\u94fe\u8868\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u8bbf\u95ee\u7236\u8fdb\u7a0b\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"struct task_struct *my_parent = current->parent;\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u8bbf\u95ee\u5b50\u8fdb\u7a0b\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"struct task_struct *task;\nstruct list_head *list;\n\nlist_for_each(list, &current->children) {\n        task = list_entry(list, struct task_struct, sibling);\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"33-\u8fdb\u7a0b\u521b\u5efa",children:"3.3 \u8fdb\u7a0b\u521b\u5efa"}),"\n",(0,t.jsx)(n.h3,{id:"331-\u5199\u65f6\u62f7\u8d1d",children:"3.3.1 \u5199\u65f6\u62f7\u8d1d"}),"\n",(0,t.jsx)(n.p,{children:"\u8d44\u6e90\u7684\u590d\u5236\u53ea\u6709\u5728\u9700\u8981\u5199\u5165\u7684\u65f6\u5019\u624d\u8fdb\u884c\uff0c\u5728\u6b64\u4e4b\u524d,\u53ea\u662f\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u5171\u4eab\u3002"}),"\n",(0,t.jsxs)(n.h3,{id:"332-fork",children:["3.3.2 ",(0,t.jsx)(n.code,{children:"fork()"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"do_fork"})," \u8c03\u7528 ",(0,t.jsx)(n.code,{children:"copy_process()"})," \u51fd\u6570\uff0c\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c\u8ba9\u8fdb\u7a0b\u5f00\u59cb\u8fd0\u884c\uff1a"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528 ",(0,t.jsx)(n.code,{children:"dup_task_struct()"}),"\u4e3a\u65b0\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u5185\u6838\u6808\u3001",(0,t.jsx)(n.code,{children:"thread_info"}),"\u7ed3\u6784\u548c",(0,t.jsx)(n.code,{children:"task_struct"}),"\uff0c\u8fd9\u4e9b\u503c\u4e0e\u5f53\u524d\u8fdb\u7a0b\u7684\u503c\u76f8\u540c\u3002"]}),"\n",(0,t.jsx)(n.li,{children:"\u68c0\u67e5\u5e76\u786e\u4fdd\u65b0\u521b\u5efa\u8fd9\u4e2a\u5b50\u8fdb\u7a0b\u540e\uff0c\u5f53\u524d\u7528\u6237\u6240\u62e5\u6709\u7684\u8fdb\u7a0b\u6570\u76ee\u6ca1\u6709\u8d85\u51fa\u7ed9\u5b83\u5206\u914d\u7684\u8d44\u6e90\u9650\u5236\u3002"}),"\n",(0,t.jsx)(n.li,{children:"\u5b50\u8fdb\u7a0b\u5bf9\u7ed3\u6784\u4f53\u6210\u5458\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u4fee\u6539\u7edf\u8ba1\u4fe1\u606f\u3002"}),"\n",(0,t.jsxs)(n.li,{children:["\u5b50\u8fdb\u7a0b\u72b6\u6001\u8bbe\u7f6e\u4e3a",(0,t.jsx)(n.code,{children:"TASK_UNINTERRUPTIBLE"}),"\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u6295\u5165\u8fd0\u884c\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"copy_process"}),"\u8c03\u7528",(0,t.jsx)(n.code,{children:"copy_flags()"}),"\u4ee5\u66f4\u65b0``task_struct",(0,t.jsx)(n.code,{children:"\u7684"}),"flags",(0,t.jsx)(n.code,{children:"\u6210\u5458\u3002"}),"PF_SUPERPRIV=0",(0,t.jsx)(n.code,{children:"\uff08\u65e0\u8d85\u7ea7\u7528\u6237\u6743\u9650\uff09,"}),"PF_FORKNOEXEC=1",(0,t.jsx)(n.code,{children:"\uff08\u672a\u8c03\u7528"}),"exec()`)\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"alloc_pid()"}),"\u4e3a\u65b0\u8fdb\u7a0b\u5206\u914d\u4e00\u4e2a\u6709\u6548\u7684PID\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u6839\u636e\u4f20\u9012\u7ed9",(0,t.jsx)(n.code,{children:"clone()"}),"\u7684\u53c2\u6570\uff0c",(0,t.jsx)(n.code,{children:"copy_process()"}),"\u62f7\u8d1d\u6216\u5171\u4eab\u6253\u5f00\u7684\u6587\u4ef6\u3001\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\u3001\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3001\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u548c\u547d\u540d\u7a7a\u95f4\u7b49\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u88ab\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\uff1b\u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u4e0d\u540c\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"copy_process()"}),"\u505a\u626b\u5c3e\u5de5\u4f5c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5b50\u8fdb\u7a0b\u7684\u6307\u9488\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["\u5982\u679c",(0,t.jsx)(n.code,{children:"copy_process()"}),"\u51fd\u6570\u6210\u529f\u8fd4\u56de\uff0c\u65b0\u521b\u5efa\u7684\u5b50\u8fdb\u7a0b\u88ab\u5524\u9192\u5e76\u8ba9\u5176\u6295\u5165\u8fd0\u884c\u3002\u5185\u6838\u6709\u610f\u9009\u62e9\u5b50\u8fdb\u7a0b\u9996\u5148\u6267\u884c\u3002",(0,t.jsxs)(n.strong,{children:["\u56e0\u4e3a\u4e00\u822c\u5b50\u8fdb\u7a0b\u90fd\u4f1a\u9a6c\u4e0a\u8c03\u7528",(0,t.jsx)(n.code,{children:"exec()"}),"\u51fd\u6570\uff0c\u53ef\u4ee5\u907f\u514d\u5199\u65f6\u62f7\u8d1d\u7684\u989d\u5916\u5f00\u9500\uff0c\u5982\u679c\u7236\u8fdb\u7a0b\u9996\u5148\u6267\u884c\u7684\u8bdd\uff0c\u6709\u53ef\u80fd\u4f1a\u5f00\u59cb\u5411\u5730\u5740\u7a7a\u95f4\u5199\u5165\u3002"]})]}),"\n",(0,t.jsx)(n.h2,{id:"34-\u7ebf\u7a0b\u5728-linux-\u4e2d\u7684\u5b9e\u73b0",children:"3.4 \u7ebf\u7a0b\u5728 Linux \u4e2d\u7684\u5b9e\u73b0"}),"\n",(0,t.jsx)(n.p,{children:"\u5185\u6838\u6ca1\u6709\u7ebf\u7a0b\u7684\u6982\u5ff5\uff0cLinux \u7684\u6240\u6709\u7ebf\u7a0b\u90fd\u5f53\u505a\u8fdb\u7a0b\u6765\u5b9e\u73b0\u3002\u7ebf\u7a0b\u4ec5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u4e0e\u5176\u5b83\u8fdb\u7a0b\u5171\u4eab\u67d0\u4e9b\u8d44\u6e90\u7684\u8fdb\u7a0b\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"341-\u521b\u5efa\u7ebf\u7a0b",children:"3.4.1 \u521b\u5efa\u7ebf\u7a0b"}),"\n",(0,t.jsxs)(n.p,{children:["\u521b\u5efa\u7ebf\u7a0b: ",(0,t.jsx)(n.code,{children:"clone(CLONE_VM | CLONE_FS | CLONE_FILES | CLONE_SIGHAND, 0)"}),";"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"fork()"}),": ",(0,t.jsx)(n.code,{children:"clone(SIGCHLD, 0)"}),";"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"vfork()"}),": ",(0,t.jsx)(n.code,{children:"clone(CLONE_VFORK | CLONE_VM | SIGCHLD, 0)"}),";"]}),"\n",(0,t.jsxs)(n.p,{children:["clone flags in ",(0,t.jsx)(n.code,{children:"<linux/sched.h>"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/*\n * cloning flags:\n */\n#define CSIGNAL              0x000000ff /* signal mask to be sent at exit */\n#define CLONE_VM             0x00000100 /* set if VM shared between processes */\n#define CLONE_FS             0x00000200 /* set if fs info shared between processes */\n#define CLONE_FILES          0x00000400 /* set if open files shared between processes */\n#define CLONE_SIGHAND        0x00000800 /* set if signal handlers and blocked signals shared */\n#define CLONE_PIDFD          0x00001000 /* set if a pidfd should be placed in parent */\n#define CLONE_PTRACE         0x00002000 /* set if we want to let tracing continue on the child too */\n#define CLONE_VFORK          0x00004000 /* set if the parent wants the child to wake it up on mm_release */\n#define CLONE_PARENT         0x00008000 /* set if we want to have the same parent as the cloner */\n#define CLONE_THREAD         0x00010000 /* Same thread group? */\n#define CLONE_NEWNS          0x00020000 /* New mount namespace group */\n#define CLONE_SYSVSEM        0x00040000 /* share system V SEM_UNDO semantics */\n#define CLONE_SETTLS         0x00080000 /* create a new TLS for the child */\n#define CLONE_PARENT_SETTID  0x00100000 /* set the TID in the parent */\n#define CLONE_CHILD_CLEARTID 0x00200000 /* clear the TID in the child */\n#define CLONE_DETACHED       0x00400000 /* Unused, ignored */\n#define CLONE_UNTRACED       0x00800000 /* set if the tracing process can't force CLONE_PTRACE on this clone */\n#define CLONE_CHILD_SETTID   0x01000000 /* set the TID in the child */\n#define CLONE_NEWCGROUP      0x02000000 /* New cgroup namespace */\n#define CLONE_NEWUTS         0x04000000 /* New utsname namespace */\n#define CLONE_NEWIPC         0x08000000 /* New ipc namespace */\n#define CLONE_NEWUSER        0x10000000 /* New user namespace */\n#define CLONE_NEWPID         0x20000000 /* New pid namespace */\n#define CLONE_NEWNET         0x40000000 /* New network namespace */\n#define CLONE_IO             0x80000000 /* Clone io context */\n"})}),"\n",(0,t.jsx)(n.h3,{id:"342-\u5185\u6838\u7ebf\u7a0b",children:"3.4.2 \u5185\u6838\u7ebf\u7a0b"}),"\n",(0,t.jsxs)(n.p,{children:["\u5185\u6838\u7ebf\u7a0b\u548c\u666e\u901a\u7684\u8fdb\u7a0b\u95f4\u7684\u533a\u522b\u5728\u4e8e\u5185\u6838\u7ebf\u7a0b\u6ca1\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff08\u5b9e\u9645\u4e0a\u6307\u5411\u5730\u5740\u7a7a\u95f4\u7684mm\u6307\u9488\u88ab\u7f6e\u4e3a",(0,t.jsx)(n.code,{children:"NULL"}),"\uff09\u3002\u5b83\u4eec\u53ea\u5728\u5185\u6838\u7a7a\u95f4\u8fd0\u884c\uff0c\u4ece\u6765\u4e0d\u5230\u7528\u6237\u7a7a\u95f4\u53bb\u3002\u5185\u6838\u8fdb\u7a0b\u548c\u666e\u901a\u8fdb\u7a0b\u4e00\u6837\u53ef\u4ee5\u88ab\u8c03\u5ea6\u4e5f\u53ef\u4ee5\u88ab\u62a2\u5360\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u521b\u5efa\u65b0\u7684\u5185\u6838\u7ebf\u7a0b:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"struct task_struct *kthread_create(int (*threadfn)(void *data),\n                                   void *data,\n                                   const char namefmt[],\n                                   ...);\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u521b\u5efa\u5e76\u8fd0\u884c\u5185\u6838\u7ebf\u7a0b:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"struct task_struct *kthread_run(int (*threadfn)(void *data),\n                                void *data,\n                                const char namefmt[],\n                                ...);\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u5b9e\u73b0\u65b9\u5f0f:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/**\n * kthread_run - create and wake a thread.\n * @threadfn: the function to run until signal_pending(current).\n * @data: data ptr for @threadfn.\n * @namefmt: printf-style name for the thread.\n *\n * Description: Convenient wrapper for kthread_create() followed by\n * wake_up_process().  Returns the kthread or ERR_PTR(-ENOMEM).\n */\n#define kthread_run(threadfn, data, namefmt, ...)                       \\\n        ({                                                              \\\n                struct task_struct *__k                                 \\\n                        = kthread_create(threadfn, data, namefmt, ## __VA_ARGS__); \\\n                if (!IS_ERR(__k))                                       \\\n                        wake_up_process(__k);                           \\\n                __k;                                                    \\\n        })\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"35-\u8fdb\u7a0b\u7ec8\u7ed3",children:"3.5 \u8fdb\u7a0b\u7ec8\u7ed3"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"do_exit()"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u5c06",(0,t.jsx)(n.code,{children:"task_struct"}),"\u4e2d\u7684\u6807\u5fd7\u6210\u5458\u7f6e\u4e3a",(0,t.jsx)(n.code,{children:"PF_EXITING"}),"\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"del_timer_sync()"}),"\u5220\u9664\u4efb\u4e00\u5185\u6838\u5b9a\u65f6\u5668\u3002\u6839\u636e\u8fd4\u56de\u7684\u7ed3\u679c\u786e\u4fdd\u6ca1\u6709\u5b9a\u65f6\u5668\u5728\u6392\u961f\uff0c\u4e5f\u6ca1\u6709\u5b9a\u65f6\u5668\u5904\u7406\u7a0b\u5e8f\u5728\u8fd0\u884c\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u5982\u679cBSD\u8bb0\u8d26\u529f\u80fd\u5f00\u542f\u3002\u8c03\u7528",(0,t.jsx)(n.code,{children:"acct_update_integrals()"}),"\u8f93\u51fa\u8bb0\u8d26\u4fe1\u606f\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"exit_mm()"}),"\u91ca\u653e\u8fdb\u7a0b\u6218\u80dc\u7684",(0,t.jsx)(n.code,{children:"mm_struct"}),"\uff0c\u5982\u679c\u6ca1\u6709\u522b\u7684\u8fdb\u7a0b\u4f7f\u7528\uff0c\u5c31\u5f7b\u5e95\u91ca\u653e\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"sem__exit()"}),"\u51fd\u6570\u3002\u5982\u679c\u8fdb\u7a0b\u6392\u961f\u7b49\u5019IPC\u4fe1\u53f7\uff0c\u5219\u79bb\u5f00\u961f\u5217\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"exit_files()"}),"\u548c",(0,t.jsx)(n.code,{children:"exit_fs()"}),"\uff0c\u4ee5\u5206\u522b \u9012\u51cf\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u6587\u4ef6\u7cfb\u7edf\u6570\u636e\u7684\u5f15\u7528\u8ba1\u6570\u3002\u5982\u679c\u5176\u4e2d\u67d0\u4e2a\u5f15\u7528\u8ba1\u6570\u7684\u6570\u503c\u964d\u4e3a0\uff0c\u6b64\u65f6\u53ef\u4ee5\u91ca\u653e\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u628a\u5b58\u653e\u5728",(0,t.jsx)(n.code,{children:"task_struct"}),"\u7684",(0,t.jsx)(n.code,{children:"exit_code"}),"\u6210\u5458\u4e2d\u7684\u4efb\u52a1\u9000\u51fa\u4ee3\u7801\u7f6e\u4e3a\u7531",(0,t.jsx)(n.code,{children:"exit()"}),"\u63d0\u4f9b\u7684\u9000\u51fa\u4ee3\u7801\uff0c\u6216\u53bb\u5b8c\u6210\u4efb\u4f55\u5176\u5b83\u7531\u5185\u6838\u673a\u5236\u89c4\u5b9a\u7684\u9000\u51fa\u52a8\u4f5c\u3002\u9000\u51fa\u4ee3\u7801\u5b58\u653e\u5728\u8fd9\u91cc\u4f9b\u7236\u8fdb\u7a0b\u968f\u65f6\u68c0\u7d22\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"exit_notify()"}),"\u5411\u7236\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0c\u7ed9\u5b50\u8fdb\u7a0b\u91cd\u627e\u517b\u7236\uff0c\u517b\u7236\u4e3a\u7ebf\u7a0b\u7ec4\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u6216\u8005\u4e3a",(0,t.jsx)(n.code,{children:"init"}),"\u8fdb\u7a0b\uff0c\u5e76\u628a\u8fdb\u7a0b\u72b6\u6001\uff08\u5b58\u653e\u5728",(0,t.jsx)(n.code,{children:"task_struct"}),"\u7ed3\u6784\u4f53\u7684",(0,t.jsx)(n.code,{children:"exit_state"}),"\uff09\u8bbe\u7f6e\u4e3a",(0,t.jsx)(n.code,{children:"EXIT_ZOMBIE"}),"\u3002"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"do_exit()"}),"\u8c03\u7528",(0,t.jsx)(n.code,{children:"schedule()"}),"\u5207\u6362\u5230\u65b0\u7684\u8fdb\u7a0b\u3002\u56e0\u4e3a\u5904\u4e8e",(0,t.jsx)(n.code,{children:"EXIT_ZOMBIE"}),"\u72b6\u6001\u7684\u8fdb\u7a0b\u4e0d\u4f1a\u518d\u88ab\u8c03\u5ea6\uff0c\u6240\u4ee5",(0,t.jsx)(n.code,{children:"do_exit()"}),"\u6c38\u4e0d\u8fd4\u56de\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["\u6b64\u65f6\u8fdb\u7a0b\u76f8\u5173\u8d44\u6e90\u91ca\u653e\uff0c\u8fdb\u7a0b\u4e0d\u53ef\u8fd0\u884c\u5e76\u5904\u4e8e",(0,t.jsx)(n.code,{children:"EXIT_ZOMBIE"}),"\u72b6\u6001\uff0c\u5360\u7528\u7684\u6240\u6709\u5185\u5b58\u4e3a\u5185\u6838\u6808\u3001",(0,t.jsx)(n.code,{children:"thread_info"}),"\u7ed3\u6784\u548c",(0,t.jsx)(n.code,{children:"task_struct"}),"\u7ed3\u6784\u3002",(0,t.jsx)(n.strong,{children:"\u6b64\u65f6\u8fdb\u7a0b\u5b58\u5728\u7684\u552f\u4e00\u76ee\u7684\u5c31\u662f\u5411\u5b83\u7684\u7236\u8fdb\u7a0b\u63d0\u4f9b\u4fe1\u606f\u3002\u7236\u8fdb\u7a0b\u68c0\u7d22\u5230\u4fe1\u606f\u540e\uff0c\u7531\u8fdb\u7a0b\u6240\u6301\u6709\u7684\u5269\u4f59\u5185\u5b58\u88ab\u91ca\u653e\uff0c\u5f52\u8fd8\u7ed9\u7cfb\u7edf\u4f7f\u7528\u3002"})]}),"\n",(0,t.jsx)(n.h3,{id:"351-\u5220\u9664\u8fdb\u7a0b\u63cf\u8ff0\u7b26",children:"3.5.1 \u5220\u9664\u8fdb\u7a0b\u63cf\u8ff0\u7b26"}),"\n",(0,t.jsxs)(n.p,{children:["\u7ebf\u7a0b\u4e0d\u518d\u8fd0\u884c\uff0c\u4f46\u662f\u7cfb\u7edf\u4fdd\u7559\u4e86\u5b83\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u3002\u91ca\u653e\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u9700\u8981\u8c03\u7528",(0,t.jsx)(n.code,{children:"release_task()"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"__exit_signal()\uff0c\u6b64\u51fd\u6570\u8c03\u7528_unhash_process()"}),"\uff0c\u6b64\u51fd\u6570\u518d\u8c03\u7528",(0,t.jsx)(n.code,{children:"detach_pid()"}),"\u4ecepidhash\u4e0a\u5220\u9664\u8be5\u8fdb\u7a0b\uff0c\u540c\u65f6\u4e5f\u8981\u4ece\u4efb\u52a1\u5217\u8868\u4e0a\u5220\u9664\u8be5\u8fdb\u7a0b"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_exit\u2014\u2014signal()"}),"\u51fd\u6570\u91ca\u653e\u76ee\u524d\u50f5\u6b7b\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u6240\u6709\u5269\u4f59\u8d44\u6e90\uff0c\u5e76\u8fdb\u884c\u6700\u7ec8\u7edf\u8ba1\u548c\u8bb0\u5f55"]}),"\n",(0,t.jsx)(n.li,{children:"\u5982\u679c \u8fd9\u4e2a\u8fdb\u7a0b\u662f\u8fdb\u7a0b\u7ec4\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u4e14\u8fdb\u7a0b\u7ec4\u7684root\u8fdb\u7a0b\u5df2\u6b7b\uff0c\u5219\u901a\u77e5root\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"release_task()"}),"\u8c03\u7528",(0,t.jsx)(n.code,{children:"put_task_struct()"}),"\u91ca\u653e\u8fdb\u7a0b\u5185\u6838\u6808\u548c",(0,t.jsx)(n.code,{children:"thread_info"}),"\u7ed3\u6784\u6240\u5360\u7684\u9875\uff0c\u5e76\u91ca\u653eslab\u9ad8\u901f\u7f13\u5b58\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"352-\u5b64\u72ec\u8fdb\u7a0b\u9020\u6210\u7684\u8fdb\u9000\u7ef4\u8c37",children:"3.5.2 \u5b64\u72ec\u8fdb\u7a0b\u9020\u6210\u7684\u8fdb\u9000\u7ef4\u8c37"}),"\n",(0,t.jsx)(n.p,{children:"\u5982\u679c\u7236\u8fdb\u7a0b\u5728\u5b50\u8fdb\u7a0b\u4e4b\u524d\u9000\u51fa\uff0c\u5fc5\u987b\u6709\u673a\u5236\u6765\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u80fd\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u7236\u4eb2\uff0c\u5426\u5219\u8fd9\u4e9b\u6210\u4e3a\u5b64\u513f\u7684\u8fdb\u7a0b\u5c31\u4f1a\u5728\u9000\u51fa\u65f6\u6c38\u8fdc\u5904\u4e8e\u50f5\u6b7b\u72b6\u6001\uff0c\u8017\u8d39\u5185\u5b58\u3002"}),"\n",(0,t.jsxs)(n.p,{children:["\u5982\u679c\u5728\u5f53\u524d\u7ebf\u7a0b\u7ec4\u4e2d\u627e\u4e0d\u5230\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\u4f5c\u4e3a\u7236\u4eb2\uff0c\u5c31\u628a",(0,t.jsx)(n.code,{children:"init"}),"\u4f5c\u4e3a\u5b83\u7684\u7236\u8fdb\u7a0b\u3002"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"do_exit()"}),"\u4f1a\u8c03\u7528",(0,t.jsx)(n.code,{children:"exit_notify()"}),"\uff0c\u6b64\u51fd\u6570\u4f1a\u8c03\u7528",(0,t.jsx)(n.code,{children:"forget_original_parent()"}),"\uff0c\u518d\u5728\u51fd\u6570\u4e2d\u8c03\u7528",(0,t.jsx)(n.code,{children:"find_new_reaper()"}),"\u5bfb\u627e\u65b0\u7684\u7236\u8fdb\u7a0b\uff1a"]}),"\n",(0,t.jsxs)(n.p,{children:["\u8bd5\u56fe\u627e\u5230\u7ebf\u7a0b\u7ec4\u4e2d\u7684\u5176\u4ed6\u8fdb\u7a0b\u3002\u5982\u679c\u6ca1\u6709\u5176\u5b83\u8fdb\u7a0b\u5219\u8fd4\u56de",(0,t.jsx)(n.code,{children:"init"}),"\u8fdb\u7a0b\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:'/*\n * When we die, we re-parent all our children.\n * Try to give them to another thread in our thread\n * group, and if no such member exists, give it to\n * the child reaper process (ie "init") in our pid\n * space.\n */\nstatic struct task_struct *find_new_reaper(struct task_struct *father)\n{\n        struct pid_namespace *pid_ns = task_active_pid_ns(father);\n        struct task_struct *thread;\n\n        thread = father;\n        while_each_thread(father, thread) {\n                if (thread->flags & PF_EXITING)\n                        continue;\n                if (unlikely(pid_ns->child_reaper == father))\n                        pid_ns->child_reaper = thread;\n                return thread;\n        }\n\n        if (unlikely(pid_ns->child_reaper == father)) {\n                write_unlock_irq(&tasklist_lock);\n                if (unlikely(pid_ns == &init_pid_ns))\n                        panic("Attempted to kill init!");\n\n                zap_pid_ns_processes(pid_ns);\n                write_lock_irq(&tasklist_lock);\n                /*\n                 * We can not clear ->child_reaper or leave it alone.\n                 * There may by stealth EXIT_DEAD tasks on ->children,\n                 * forget_original_parent() must move them somewhere.\n                 */\n                pid_ns->child_reaper = init_pid_ns.child_reaper;\n        }\n\n        return pid_ns->child_reaper;\n}\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u904d\u5386\u6240\u6709\u5b50\u8fdb\u7a0b\u5e76\u4e3a\u5b83\u8bbe\u7f6e\u65b0\u7684\u7236\u8fdb\u7a0b"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"reaper = find_new_reaper(father);\n\nlist_for_each_entry_safe(p, n, &father->children, sibling) {\n        struct task_struct *t = p;\n        do {\n                t->real_parent = reaper;\n                if (t->parent == father) {\n                        BUG_ON(task_ptrace(t));\n                        t->parent = t->real_parent;\n                }\n                if (t->pdeath_signal)\n                        group_send_sig_info(t->pdeath_signal,\n                                            SEND_SIG_NOINFO, t);\n        } while_each_thread(p, t);\n        reparent_leader(father, p, &dead_children);\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u8c03\u7528",(0,t.jsx)(n.code,{children:"ptrace_exit_finish()"}),"\u4e3a ptraced \u7684\u5b50\u8fdb\u7a0b\u5bfb\u627e\u7236\u8fdb\u7a0b\u3002\u5e76\u4e3a\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u8bbe\u7f6e\u65b0\u7684\u7236\u8fdb\u7a0b\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u88ab\u8ddf\u8e2a\u65f6\uff0c\u5b83\u7684\u4e34\u65f6\u7236\u8fdb\u7a0b\u88ab\u8bbe\u7f6e\u4e3a\u8c03\u8bd5\u8fdb\u7a0b\u3002\u5982\u679c\u5b83\u7684\u7236\u8fdb\u7a0b\u9000\u51fa\u4e86\uff0c\u7cfb\u7edf\u4e3a\u5b83\u548c\u5b83\u7684\u6240\u6709\u5144\u5f1f\u8fdb\u7a0b\u91cd\u65b0\u627e\u4e00\u4e2a\u7236\u8fdb\u7a0b\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"/*\n * Called with tasklist_lock held for writing.\n * Unlink a traced task, and clean it up if it was a traced zombie.\n * Return true if it needs to be reaped with release_task().\n * (We can't call release_task() here because we already hold tasklist_lock.)\n *\n * If it's a zombie, our attachedness prevented normal parent notification\n * or self-reaping.  Do notification now if it would have happened earlier.\n * If it should reap itself, return true.\n *\n * If it's our own child, there is no notification to do. But if our normal\n * children self-reap, then this child was prevented by ptrace and we must\n * reap it now, in that case we must also wake up sub-threads sleeping in\n * do_wait().\n */\nstatic bool __ptrace_detach(struct task_struct *tracer, struct task_struct *p)\n{\n        __ptrace_unlink(p);\n\n        if (p->exit_state == EXIT_ZOMBIE) {\n                if (!task_detached(p) && thread_group_empty(p)) {\n                        if (!same_thread_group(p->real_parent, tracer))\n                                do_notify_parent(p, p->exit_signal);\n                        else if (ignoring_children(tracer->sighand)) {\n                                __wake_up_parent(p, tracer);\n                                p->exit_signal = -1;\n                        }\n                }\n                if (task_detached(p)) {\n                        /* Mark it as in the process of being reaped. */\n                        p->exit_state = EXIT_DEAD;\n                        return true;\n                }\n        }\n\n        return false;\n}\n\n/*\n * Detach all tasks we were using ptrace on.\n */\nvoid exit_ptrace(struct task_struct *tracer)\n{\n        struct task_struct *p, *n;\n        LIST_HEAD(ptrace_dead);\n\n        write_lock_irq(&tasklist_lock);\n        list_for_each_entry_safe(p, n, &tracer->ptraced, ptrace_entry) {\n                if (__ptrace_detach(tracer, p))\n                        list_add(&p->ptrace_entry, &ptrace_dead);\n        }\n        write_unlock_irq(&tasklist_lock);\n\n        BUG_ON(!list_empty(&tracer->ptraced));\n\n        list_for_each_entry_safe(p, n, &ptrace_dead, ptrace_entry) {\n                list_del_init(&p->ptrace_entry);\n                release_task(p);\n        }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u4e00\u65e6\u7cfb\u7edf \u4e3a\u8fdb\u7a0b\u6210\u529f\u627e\u5230\u548c\u8bbe\u7f6e\u4e86\u65b0\u7684\u7236\u8fdb\u7a0b\uff0c\u5c31\u4e0d\u4f1a\u518d\u51fa\u73b0\u9a7b\u7559\u50f5\u6b7b\u8fdb\u7a0b\u7684\u5371\u9669\uff0c",(0,t.jsxs)(n.strong,{children:["init \u8fdb\u7a0b\u4f1a\u4f8b\u884c\u8c03\u7528 ",(0,t.jsx)(n.code,{children:"wait()"}),"\u6765\u68c0\u67e5\u5176\u5b50\u8fdb\u7a0b\uff0c\u6e05\u9664\u6240\u6709\u4e0e\u5176\u76f8\u5173\u7684\u50f5\u6b7b\u8fdb\u7a0b\u3002"]})]}),"\n",(0,t.jsx)(n.h2,{id:"36-\u5c0f\u7ed3",children:"3.6 \u5c0f\u7ed3"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u5185\u6838\u5b58\u653e\u548c\u8868\u793a\u8fdb\u7a0b\uff1a",(0,t.jsx)(n.code,{children:"task_struct"}),"\u548c",(0,t.jsx)(n.code,{children:"thread_info"})]}),"\n",(0,t.jsxs)(n.li,{children:["\u521b\u5efa\u8fdb\u7a0b\uff1a\u901a\u8fc7 ",(0,t.jsx)(n.code,{children:"fork()"}),"\uff08\u8c03\u7528",(0,t.jsx)(n.code,{children:"clone()"}),"\uff09"]}),"\n",(0,t.jsx)(n.li,{children:"\u8fdb\u7a0b\u8c03\u5ea6\uff1a\u94fe\u8868\u904d\u5386"}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11783:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/fig3.1-342c1a489358c2de8f7890f556d47fb9.png"},74086:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/fig3.3-a06277a24dd3620744daeef09fcd3fd1.png"},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>d});var r=s(96540);const t={},i=r.createContext(t);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);