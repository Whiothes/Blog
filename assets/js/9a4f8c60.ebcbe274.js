"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6686],{70791:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"TOC/language/C++/C++_Primer/ch03","title":"Chapter 3. Strings, Vectors, and Arrays","description":"3.1. Namespace using Declarations","source":"@site/docs/TOC/language/C++/C++_Primer/ch03.md","sourceDirName":"TOC/language/C++/C++_Primer","slug":"/TOC/language/C++/C++_Primer/ch03","permalink":"/docs/TOC/language/C++/C++_Primer/ch03","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Chapter 2. Variables and Basic Types","permalink":"/docs/TOC/language/C++/C++_Primer/ch02"},"next":{"title":"Chapter 7. Classes","permalink":"/docs/TOC/language/C++/C++_Primer/ch07"}}');var r=s(74848),t=s(28453);const d={},c="Chapter 3. Strings, Vectors, and Arrays",l={},h=[{value:"3.1. Namespace <code>using</code> Declarations",id:"31-namespace-using-declarations",level:2},{value:"A Separate <code>using</code> Declaration is Required for Each Name",id:"a-separate-using-declaration-is-required-for-each-name",level:4},{value:"3.2. Library <code>string</code> Type",id:"32-library-string-type",level:2},{value:"3.2.1. Defining and Initializing strings",id:"321-defining-and-initializing-strings",level:3},{value:"3.2.2. Operations on strings",id:"322-operations-on-strings",level:3},{value:"3.3. Library <code>vector</code> Type",id:"33-library-vector-type",level:2},{value:"3.3.1. Defining and Initializing vectors",id:"331-defining-and-initializing-vectors",level:2},{value:"3.3.3. Other <code>vector</code> Operations",id:"333-other-vector-operations",level:3},{value:"3.4. Introducing Iterators",id:"34-introducing-iterators",level:2},{value:"3.4.1. Using Iterators",id:"341-using-iterators",level:3}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"chapter-3-strings-vectors-and-arrays",children:"Chapter 3. Strings, Vectors, and Arrays"})}),"\n",(0,r.jsxs)(n.h2,{id:"31-namespace-using-declarations",children:["3.1. Namespace ",(0,r.jsx)(n.code,{children:"using"})," Declarations"]}),"\n",(0,r.jsxs)(n.p,{children:["*",(0,r.jsx)(n.em,{children:"using declaration"})," use a name from a namespace without qualifying the name with a ",(0,r.jsx)(n.code,{children:"namespace_name::"})," prefix."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"using  namespace::std;\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"#include <iostream>\n\nusing std::cin;\nint main()\n{\n  int i;\n  cin >> i; // ok: std::cin\n  cout << i; // error: no using declaration\n}\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"a-separate-using-declaration-is-required-for-each-name",children:["A Separate ",(0,r.jsx)(n.code,{children:"using"})," Declaration is Required for Each Name"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"using std::cin;\nusing std::cout;\nusing std::endl;\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"32-library-string-type",children:["3.2. Library ",(0,r.jsx)(n.code,{children:"string"})," Type"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"#include <string>\nusing std::string;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"321-defining-and-initializing-strings",children:"3.2.1. Defining and Initializing strings"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"stirng s1; \nstring s2 = s1;\nstring s3 = \"hiya\";\nstring s4(10, 'c'); // s4 is cccccccccc\n"})}),"\n",(0,r.jsx)(n.p,{children:"Table 3.1. Ways to Initialize a string"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"initialization"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"string s1"}),(0,r.jsx)(n.td,{children:"Default, empty string"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"string s2(s1)"}),(0,r.jsx)(n.td,{children:"s2 is a copy of s1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"string s2 = s1"}),(0,r.jsx)(n.td,{children:"Equivalent to s2(s1)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:'string s3("value")'}),(0,r.jsx)(n.td,{children:"s3 is a copy of the string literal, not including the null"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:'string s3 = "value"'}),(0,r.jsx)(n.td,{children:'Equivalent to s3("value")'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"string s4(n, 'c')"}),(0,r.jsx)(n.td,{children:"Initialize s4 with n copies of the character 'c'"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"322-operations-on-strings",children:"3.2.2. Operations on strings"}),"\n",(0,r.jsxs)(n.p,{children:["Tables 3.2. ",(0,r.jsx)(n.code,{children:"string"})," operations"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"operation"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"os << s"})}),(0,r.jsx)(n.td,{children:"Writes s onto output stream os. return os."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"is >> s"}),(0,r.jsx)(n.td,{children:"Reads whitespace-separated string from is into s. return is."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"getline(is, s)"}),(0,r.jsx)(n.td,{children:"Reads a line of input from is into s. return is."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"s.empty()"}),(0,r.jsxs)(n.td,{children:["Return ",(0,r.jsx)(n.code,{children:"true"})," if ",(0,r.jsx)(n.code,{children:"s"})," is empty; otherwise returns ",(0,r.jsx)(n.code,{children:"fals/e"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"s.size()"}),(0,r.jsx)(n.td,{children:"Returns the number of characters in s"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"s[n]"}),(0,r.jsxs)(n.td,{children:["Returns a reference to the char at position ",(0,r.jsx)(n.code,{children:"n"})," in ",(0,r.jsx)(n.code,{children:"s"}),"; positions starts at 0"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"s1 + s2"}),(0,r.jsx)(n.td,{children:"Returns a string that is concatatenation of s1 and s2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"s1 = s2"}),(0,r.jsx)(n.td,{children:"Replaces characters in s1 with a copy of s2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"s1 != s2"}),(0,r.jsx)(n.td,{children:"Equality is case-sensitive"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"<"}),", ",(0,r.jsx)(n.code,{children:"<="}),", ",(0,r.jsx)(n.code,{children:">"}),", ",(0,r.jsx)(n.code,{children:">="})]}),(0,r.jsx)(n.td,{children:"Comparasions are case-sensitive and use dictionary ordering.`"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["use ",(0,r.jsx)(n.code,{children:"getline"})," function if we do not want to ignore the whitespace in our input."]}),"\n",(0,r.jsxs)(n.h2,{id:"33-library-vector-type",children:["3.3. Library ",(0,r.jsx)(n.code,{children:"vector"})," Type"]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"vector"})," is a collection of objects, all of which have the ",(0,r.jsx)(n.strong,{children:"same"})," type."]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"vector"})," is a ",(0,r.jsx)(n.strong,{children:"class template"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"331-defining-and-initializing-vectors",children:"3.3.1. Defining and Initializing vectors"}),"\n",(0,r.jsxs)(n.p,{children:["Table 3.4. Ways to Initialize a ",(0,r.jsx)(n.code,{children:"vector"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"initialization"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v1"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"vector"})," that holds object of type T. Default initializaiton; ",(0,r.jsx)(n.code,{children:"v1"})," is empty."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v2(v1)"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"v2"})," has a copy of each element in ",(0,r.jsx)(n.code,{children:"v1"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v2 = v1"})}),(0,r.jsxs)(n.td,{children:["Equivalent to ",(0,r.jsx)(n.code,{children:"v2(v1)"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v3(n, val)"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"v3"})," has ",(0,r.jsx)(n.code,{children:"n"})," elements with value ",(0,r.jsx)(n.code,{children:"val"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v4(n)"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"v4"})," has ",(0,r.jsx)(n.code,{children:"n"})," copies of a value-initialized object."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v5{a, b, c ...}"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"v5"})," has as many elements as there are initializers; elements are initialized by corresponding initializers"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vector<T> v5 = {a, b, c ...}"})}),(0,r.jsxs)(n.td,{children:["Equivalent to ",(0,r.jsx)(n.code,{children:"v5 {a, b, c ...}"})]})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"333-other-vector-operations",children:["3.3.3. Other ",(0,r.jsx)(n.code,{children:"vector"})," Operations"]}),"\n",(0,r.jsxs)(n.p,{children:["Table 3.5. ",(0,r.jsx)(n.code,{children:"vector"})," Operations"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"operation"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v.empty()"})}),(0,r.jsxs)(n.td,{children:["Returns ",(0,r.jsx)(n.code,{children:"true"})," if ",(0,r.jsx)(n.code,{children:"v"})," is empty, otherwise returns ",(0,r.jsx)(n.code,{children:"false"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v.size()"})}),(0,r.jsxs)(n.td,{children:["Returns the number of elements in ",(0,r.jsx)(n.code,{children:"v"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v.push_back(t)"})}),(0,r.jsxs)(n.td,{children:["Adds an element with value ",(0,r.jsx)(n.code,{children:"t"})," to end of ",(0,r.jsx)(n.code,{children:"v"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v[n]"})}),(0,r.jsxs)(n.td,{children:["Returns a reference to the element at position ",(0,r.jsx)(n.code,{children:"n"})," in ",(0,r.jsx)(n.code,{children:"v"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v1 = v2"})}),(0,r.jsxs)(n.td,{children:["Replaces the elements in ",(0,r.jsx)(n.code,{children:"v1"})," with a copy of the elements in ",(0,r.jsx)(n.code,{children:"v2"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v1 = {a, b, c ...}"})}),(0,r.jsxs)(n.td,{children:["Replaces the elements in ",(0,r.jsx)(n.code,{children:"v1"})," with a copy of the elements in the comma-separated list."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v1 == v2"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v1.size() == v2.size() && v1[n] == v2[n]"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"v1 != v2"})}),(0,r.jsx)(n.td,{children:"`v1.size() != v2.size()"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"<, <=, >, >="})}),(0,r.jsx)(n.td,{children:"Have their normal meanings using dictionary ordering"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"34-introducing-iterators",children:"3.4. Introducing Iterators"}),"\n",(0,r.jsx)(n.h3,{id:"341-using-iterators",children:"3.4.1. Using Iterators"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"auto b = v.begin(), e = v.end(); \n"})}),"\n",(0,r.jsx)(n.p,{children:"Table 3.6. Standard Container Iterator Operations"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"oepration"}),(0,r.jsx)(n.th,{children:"description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"*iter"}),(0,r.jsxs)(n.td,{children:["Returns a reference to the element denoted by the iterator ",(0,r.jsx)(n.code,{children:"iter"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"iter->mem"}),(0,r.jsxs)(n.td,{children:["Deference ",(0,r.jsx)(n.code,{children:"iter"})," and fetches the member named ",(0,r.jsx)(n.code,{children:"mem"})," from the underlying element. Equivalent to ",(0,r.jsx)(n.code,{children:"(*iter).mem"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"++iter"}),(0,r.jsxs)(n.td,{children:["Increments ",(0,r.jsx)(n.code,{children:"iter"})," to refer to the next element in the container."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"--iter"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"iter1 == iter2"}),(0,r.jsx)(n.td,{children:"equal if they have the same element or if they are off-the-end iterator for the same container."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"iter1 != iter2"}),(0,r.jsx)(n.td,{})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"vector<int>::iterator it;\nstring::iterator it2;\nvector<int>const_iterator it3; // it3 can read bu cannot write\t\nstring::const_iterator it4;\t\n"})})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>c});var i=s(96540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);